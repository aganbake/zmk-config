/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/rgb.h>

//#include <../boards/shields/corne/boards/nice_nano.overlay>

// define blueth
#define BT(n) BT_SEL n

// defines readable layer index
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NAVI    3
#define ADJS    4

/ {     
        keymap {
                compatible = "zmk,keymap";

                default_layer { 
// DEFAULT LAYER
// .--------------------------------------------------------------.       .-----------------------------------------------------------.
// |   ESC        |    Q    |    W   |   E    |    R    |    T    |       |   Y   |    U    |    I    |    O    |     P    |   BKSP   |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   SHFT/Tab   |    A    |    S   |   D    |    F    |    G    |       |   H   |    J    |    K    |    L    |    ;Ñ    |    '´    |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   CTRL       |    Z    |    X   |   C    |    V    |    B    |       |   N   |    M    |   ,;    |    :.   |    /-_   |   NAV    |
// '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
//                                   |  GUI   |   LWR   |   SPC   |       |  ENT  |   RSE   | LALT/Gr |
//                                   '--------+---------+---------'       '-------+---------+---------'
                  bindings = <
        &kp TAB        &kp Q    &kp W    &kp E    &kp R     &kp T           &kp Y    &kp U      &kp I     &kp O     &kp P     &kp BKSP
        &mt LSHFT TAB  &kp A    &kp S    &kp D    &kp F     &kp G           &kp H    &kp J      &kp K     &kp L     &kp SCLN  &kp QUOT
        &kp LCTL       &kp Z    &kp X    &kp C    &kp V     &kp B           &kp N    &kp M      &kp CMMA  &kp DOT   &kp FSLH  &mo NAVI
                                       &kp LGUI  &mo LOWER  &kp SPC    &kp RET  &mo RAISE  &mt RALT LALT
                            >;
                };


                lower_layer {
// LOWER Layer: Media and Number Pad
// .--------------------------------------------------------------.    .-----------------------------------------------------------.
// |   ESC        |    F9   |   F10  |   F11  |   F12   |         |    |   -   |   7 /   |   8 (   |   9 )   |    '?    |   BKSP   |
// |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
// |   SHFT/Tab   |    F5   |   F6   |   F7   |   F8    |         |    |   (   |   4$~   |   5%€   |   6&¬   |   ,;     |    @     |
// |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
// |   CTRL       |    F1   |   F2   |   F3   |   F4    |         |    |  0 =  |   1!|   |   2"@   |   3·#   |    ¡¿    |   ALTGR  |
// '---------------------------------+--------+---------+---------+    |-------+---------+---------+-------------------------------'
//                                   |  GUI   |   LWR   |   SPC   |    |  ENT  |   ADJ   |   LALT   |
//                                   '--------+---------+---------'    '-------+---------+---------'

                  bindings = <
          &kp ESC     &kp F9   &kp F10  &kp F11  &kp F12  &none       &kp FSLH   &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp MINUS  &kp BKSP
          &trans      &kp F5   &kp F6   &kp F7   &kp F8   &none       &kp STAR   &kp NUM_4  &kp NUM_5  &kp NUM_6  &kp COMMA  &kp AT_SIGN
          &trans      &kp F1   &kp F2   &kp F3   &kp F4   &none       &kp NUM_0  &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp EQUAL  &kp RALT
                                        &trans   &trans   &trans      &trans     &mo ADJS   &trans
                            >;
                };



                raise_layer {
// RAISE Layer: Special Chars
// .--------------------------------------------------------------.    .-----------------------------------------------------------.
// |     ºª\      |    !    |   "    |   ^    |    *    |  ´¨{    |    |   (   |    ?    |   <>    |    *    |    2@    |   BKSP   |
// |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
// |   SHFT/Tab   |    ·    |    $   |   )    |    =    |    Ç}   |    |   ¿   |    '?   |   -_    |    >    |    #·    |   CAPS   |
// |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
// |     CTRL     |    %    |    &   |  `[   |    +]    |    ª    |    |   /   |    ¡¿   |   ,;    |    ;    |    :     |  ALTGR   |
// '---------------------------------+--------+---------+---------+    |-------+---------+---------+-------------------------------'
//                                   |        |         |         |    |       |         |         |
//                                   '--------+---------+---------'    '-------+---------+---------'
                        bindings = <
        &kp GRAVE  &kp EXCL   &kp AT    &kp LBRC  &kp RBRC  &kp QUOT     &kp ASTRK  &kp UNDER  &kp NUBS  &kp KP_MULTIPLY  &kp NUM_2  &kp BKSP
        &trans     &kp HASH   &kp DLLR  &kp LPAR  &kp RPAR  &kp NUHS     &kp PLUS   &kp MINUS  &kp FSLH  &kp PIPE2        &kp POUND  &kp CAPS
        &trans     &kp PRCNT  &kp CARET &kp LBKT  &kp RBKT  &kp TILDE    &kp AMPS   &kp EQUAL  &kp COMMA &kp LT           &kp GT     &kp RALT
                                        &trans    &mo ADJS  &trans       &trans     &trans     &trans
                        >;
                };


              nav_layer {
// NAVIGATION Layer: Directions
// .--------------------------------------------------------------.    .-----------------------------------------------------------.
// |      *       |    (    |    )   |  MUTE  |   VOL-  |  VOL+   |    | PG UP | PG HOME |   UP    |  PG END |   DEL    |  PrtScn  |
// |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
// |   SHFT/Tab   |    /    |    =   |   ¿¡   |    ?'   |    !    |    | PF DN |  LEFT   |  DOWN   |  RIGHT  |   INS    | CAPS LCK |
// |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
// |     CTRL     |    <>   |   `[^  |   +*]  |   ´{    |   ç}    |    |       |         |         |         |          |          |
// '---------------------------------+--------+---------+---------+    |-------+---------+---------+-------------------------------'
//                                   |        |         |         |    | AltGr |         |         |
//                                   '--------+---------+---------'    '-------+---------+---------'
                        bindings = <
          &kp RBRC     &kp ASTRK   &kp LPAR    &kp C_MUTE   &kp C_VOL_DN  &kp C_VOL_UP        &kp PG_UP  &kp HOME   &kp UARW   &kp END   &kp DEL  &kp PSCRN
          &trans       &kp AMPS    &kp RPAR    &kp EQUAL    &kp MINUS     &kp EXCL            &kp PG_DN  &kp LARW   &kp DARW   &kp RARW  &kp INS  &kp CLCK
          &trans       &kp NUBS    &kp LBKT    &kp RBKT     &kp QUOT      &kp NUHS            &none      &none      &none      &none     &none    &trans
                                               &none        &none         &none               &kp RALT   &none      &none
                        >;
                };


                adjust_layer {
// ADJUST Layer: Setting and Configurations
// .------------------------------------------------------------.    .-------------------------------------------------------------.
// |  BT CLR    |  BT 0   |  BT 1  |  BT 2  |  BT 3   |  BT 4   |    | RGB_TOG | RGB_HUI | RGB_SAI | RGB_BRI | RGB_SPI  | RGB_EFF  | ⬆
// |------------+---------+--------+--------+---------+---------|    |---------+---------+---------+---------+----------+----------|
// | ExtPow ON  |         |        |        |         |         |    | OUT_TOG | RGB_HUD | RGB_SAD | RGB_BRD | RGB_SPD  | RGB_EFR  | ⬇
// |------------+---------+--------+--------+---------+---------|    |---------+---------+---------+---------+----------+----------|
// | ExtPow OFF |         |        |        |         |         |    |         |         |         |         |          |          |
// '-------------------------------+--------+---------+---------+    |---------+---------+---------+-------------------------------'
//                                 |   ALT  |         |         |    |         |         |         |
//                                 '--------+---------+---------'    '---------+---------+---------'

                        bindings = <
    &bt BT_CLR          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4       &rgb_ug RGB_TOG     &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_EFF
    &ext_power EP_ON    &none         &none         &none         &none         &none              &out OUT_TOG        &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_EFR
    &ext_power EP_OFF   &none         &none         &none         &none         &none              &none               &none           &none           &none           &none           &none
                                                    &kp LALT      &none         &none              &none               &none           &trans
                        >;
                };
        };
};

&pro_micro_i2c {
  status = "okay";

  oled: ssd1306@3c {
    compatible = "solomon,ssd1306fb";
    reg = <0x3c>;
    label = "SSD1306";
    width = <128>;
    height = <32>;
    segment-offset = <0>;
    page-offset = <0>;
    display-offset = <0>;
    multiplex-ratio = <31>;
    com-invdir;
    segment-remap;
    com-sequential;
    prechargep = <0x22>;
  };
};

/ {
  chosen {
    zephyr,display = &oled;
    zmk,underglow = &led_strip;
  };
};